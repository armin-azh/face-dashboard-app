// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: face.sql

package sqlcmain

import (
	"context"
)

const listFace = `-- name: ListFace :many
SELECT id, prime, image, thumbnail, vector, score, indexed
FROM "Face"
ORDER BY id DESC
LIMIT $1 OFFSET $2
`

func (q *Queries) ListFace(ctx context.Context, limit int32, offset int32) ([]Face, error) {
	rows, err := q.db.Query(ctx, listFace, limit, offset)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Face
	for rows.Next() {
		var i Face
		if err := rows.Scan(
			&i.ID,
			&i.Prime,
			&i.Image,
			&i.Thumbnail,
			&i.Vector,
			&i.Score,
			&i.Indexed,
		); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
